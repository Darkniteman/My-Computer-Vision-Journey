# -*- coding: utf-8 -*-
"""Blue Screen.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mA0HEo8VAHbgD03iIP3gKJ6E-hgnzMFL
"""

import cv2
import matplotlib.image as implt
import numpy as np
import matplotlib.pyplot as plt

image = cv2.imread('bluepizza.jpeg')
image

"""After uploading the photo the computer see it in format BGR so we need to change this format into RGB.

So we can make a copy of the image to change it as we need.
"""

image_copy = np.copy(image)
image_copy = cv2.cvtColor(image_copy, cv2.COLOR_BGR2RGB)
plt.imshow(image_copy)

"""**Lower bound**
We want to include only the strong blue shades, so:

Red (R) = 0 (no red to avoid purple shades)

Green (G) = 0 (no green to avoid cyan shades)

Blue (B) = a low value (e.g., 100 or more) to capture dark blue


---


**Upper bound**

We allow lighter blues, so we increase other colors slightly:

Red (R) = some value (e.g., 100) to allow light blue variations

Green (G) = some value (e.g., 100) to include sky-blue shades

Blue (B) = 255 (maximum blue intensity)
"""

lower_blue=np.array([0,0,100])
upper_blue=np.array([100,100,255])

#Creating a mask
mask=cv2.inRange(image_copy,lower_blue,upper_blue)
plt.imshow(mask,cmap='gray')
mask.shape

image_copy[mask!=0]=[0,0,0]
image_copy

background=cv2.imread('water.jpeg')
background.shape

#Background without pizza
background = cv2.imread('water.jpeg')
background = cv2.cvtColor(background,cv2.COLOR_BGR2RGB)
background = cv2.resize(background, (image_copy.shape[1], image_copy.shape[0]))
cropped_background = background[0:mask.shape[0],0:mask.shape[1]]
plt.imshow(cropped_background)

cropped_background[mask==0]=[0,0,0]
plt.imshow(cropped_background)

complete_image=cropped_background+image_copy
plt.imshow(complete_image)